{"version":3,"sources":["Home.js","About.js","modalDeleteAlert.js","updateUsers.js","InputUser.js","CrudAppFunc.js","AboutUser.js","Routing.js","app.js","index.js"],"names":["Home","slides","src","alt","Container","Row","className","autoplay","interval","About","Col","width","height","ModalAlert","useContext","ShowModal","idDel","showStatus","postDel","id","show","setShow","posts","setPosts","handleClose","Alert","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","data","axios","delete","console","log","postsAfterDel","filter","e","UpdatePosts","UpdateShow","idUpdate","postUp","open","setOpen","useState","userId","idVal","setidVal","title","idTitle","setidTitle","body","idBody","setidBody","handleChange","target","name","value","handleSubmit","a","preventDefault","put","postupdated","map","post","centered","Form","onSubmit","Group","Label","Control","type","placeholder","onChange","AddUser","AddVal","setAddVal","AddTitle","setAddTitle","AddBody","setAddBody","userName","setUsername","postAdd","useEffect","getData","get","postsAdd","push","as","custom","user","React","createContext","Crud","setID","maxWidth","sm","Provider","Table","striped","bordered","hover","size","to","modalShow","UpdateData","AboutUser","match","useRouteMatch","params","Id","User","setUser","Data","setData","htmlFor","Accordion","Card","Toggle","eventKey","Collapse","email","address","suite","street","zipcode","company","website","Routing","Navbar","bg","Brand","href","Nav","Link","exact","path","App","state","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdfd74ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport ControlledCarousel from \"./ControlledCarousel\";\r\nimport { Carousel } from \"3d-react-carousal\";\r\n\r\nconst Home = () => {\r\n  let slides = [\r\n    <img\r\n      src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--54ca_F2q--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/1wwdyw5de8avrdkgtz5n.png\"\r\n      alt=\"1\"\r\n    />,\r\n    <img src=\"https://miro.medium.com/max/792/1*lJ32Bl-lHWmNMUSiSq17gQ.png\" alt=\"2\" />,\r\n    <img src=\"https://www.drupal.org/files/project-images/bootstrap-stack.png\" alt=\"3\" />,\r\n    \r\n  ];\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <Container>\r\n        <br></br>\r\n        <Row className = \"carousel\">\r\n          {/* <Col md=\"auto\"> */}\r\n          <Carousel slides={slides} autoplay={false} interval={1000} />\r\n          {/* </Col> */}\r\n\r\n          {/* <Col md=\"auto\">Variable width content</Col>\r\n         <Col xs lg=\"2\">\r\n           3 of 3\r\n         </Col> */}\r\n        </Row>\r\n        <br></br>\r\n        <Row className=\"justify-content\">\r\n          <h1 className=\"font-weight-bold\">Design of Crud App</h1>\r\n          <p>\r\n            <span className=\"font-italic font-weight-bold\">\r\n              CRUD Meaning :{\" \"}\r\n            </span>{\" \"}\r\n            CRUD is an acronym that comes from the world of computer programming\r\n            and refers to the four functions that are considered necessary to\r\n            implement a persistent storage application: create, read, update and\r\n            delete.Persistent storage refers to any data storage device that\r\n            retains power after the device is powered off, such as a hard disk\r\n            or a solid-state drive. In contrast, random access memory and\r\n            internal caching are two examples of volatile memory - they contain\r\n            data that will be erased when they lose power.\r\n          </p>\r\n        </Row>\r\n        <Row className=\"justify-content\">\r\n          <h1 className=\"font-weight-bold\">\r\n            Tools Used In Building This Web App\r\n          </h1>\r\n          <p>\r\n            <span className=\"font-italic font-weight-bold\">React JS : </span>{\" \"}\r\n            React makes it painless to create interactive UIs. Design simple\r\n            views for each state in your application, and React will efficiently\r\n            update and render just the right components when your data changes.\r\n            Declarative views make your code more predictable and easier to\r\n            debug.\r\n          </p>\r\n          <p>\r\n            <span className=\"font-italic font-weight-bold\">Bootstrap : </span>{\" \"}\r\n            Quickly design and customize responsive mobile-first sites with\r\n            Bootstrap, the world’s most popular front-end open source toolkit,\r\n            featuring Sass variables and mixins, responsive grid system,\r\n            extensive prebuilt components, and powerful JavaScript plugins.\r\n            Declarative views make your code more predictable and easier to\r\n            debug.\r\n          </p>\r\n          <p>\r\n            <span className=\"font-italic font-weight-bold\">HTML : </span> HTML\r\n            is the language for describing the structure of Web pages. HTML\r\n            gives authors the means to: Publish online documents with headings,\r\n            text, tables, lists, photos, etc. Retrieve online information via\r\n            hypertext links, at the click of a button.\r\n          </p>\r\n          <p>\r\n            <span className=\"font-italic font-weight-bold\">CSS : </span>{\" \"}\r\n            Cascading Style Sheets (CSS) is a simple mechanism for adding style\r\n            (e.g., fonts, colors, spacing) to Web documents. These pages contain\r\n            information on how to learn and use CSS and on available software.\r\n            They also contain news from the CSS working group.\r\n          </p>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n        <br></br>\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n            <img\r\n          alt=\"Profile Pic\"\r\n          src=\"https://www.eguardtech.com/wp-content/uploads/2018/08/Network-Profile.png\"\r\n          width=\"450\"\r\n          height=\"450\"\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n        </Col>\r\n        <Col>\r\n        <Row>\r\n        <h2 className=\"font-weight-bold\">Details</h2>\r\n          <p>\r\n            Name :\r\n            <span className=\"font-italic font-weight-bold\">\r\n            Sandeep kumar K{\" \"}\r\n            </span>{\" \"}\r\n          </p>\r\n          <p>\r\n            Qualification :\r\n            <span className=\"font-italic font-weight-bold\">\r\n            B.Tech in Mechanical{\" \"}\r\n            </span>{\" \"}\r\n          </p>\r\n          <p>\r\n            Graduated from :\r\n            <span className=\"font-italic font-weight-bold\">\r\n           Raghu Engineering College, Visakhapatnam, Andhra Pradesh{\" \"}\r\n            </span>{\" \"}\r\n          </p>\r\n          <p>\r\n            Works at :\r\n            <span className=\"font-italic font-weight-bold\">\r\n            HCL Technologies{\" \"}\r\n            </span>{\" \"}\r\n          </p>\r\n          <p>\r\n            Email :\r\n            <span className=\"font-italic font-weight-bold\">\r\n            sandeepkumar199818@gmail.com{\" \"}\r\n            </span>{\" \"}\r\n          </p>\r\n        </Row>\r\n        </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        <br></br>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About","import React, { useContext} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal,Button,Alert } from \"react-bootstrap\";\r\nimport {ShowModal} from './CrudAppFunc';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nlet ModalAlert=()=> {\r\n    let {idDel, showStatus, postDel} = useContext(ShowModal);\r\n\r\n    let [id,setID] = idDel;\r\n    let [show,setShow] = showStatus;\r\n    let [posts,setPosts] = postDel;\r\n\r\n    let API = \"https://jsonplaceholder.typicode.com/posts\";\r\n  \r\n    const handleClose = () => setShow(false);\r\n    // const handleShow = () => setShow(true);\r\n    const deleteUser =  () => {\r\n      \r\n      try {\r\n        let { data } = axios.delete(`${API}/${id}`);\r\n        console.log(data)\r\n        let postsAfterDel = posts.filter((posts) => posts.id !== id);\r\n        setPosts(postsAfterDel);\r\n        setShow(false)\r\n      } catch (e) {\r\n        console.log(e);\r\n      };\r\n    };\r\n    \r\n    return (\r\n      <>\r\n        \r\n        <Alert>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Are you sure ?</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Do you want to delete the date of {id} ?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              No\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={deleteUser}>\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </Alert>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default ModalAlert","import React, { useContext, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button, Alert, Form } from \"react-bootstrap\";\r\nimport { ShowModal } from \"./CrudAppFunc\";\r\nimport axios from \"axios\";\r\n\r\nlet UpdatePosts = () => {\r\n  let { UpdateShow, idUpdate, postUp } = useContext(ShowModal);\r\n\r\n  let [open, setOpen] = UpdateShow;\r\n  let [id, setID] = idUpdate;\r\n  let [posts, setPosts] = postUp;\r\n  let API = \"https://jsonplaceholder.typicode.com/posts\";\r\n  let [idVal,setidVal] = useState(posts[id-1].userId);\r\n  let [idTitle,setidTitle] = useState(posts[id-1].title)\r\n  let [idBody,setidBody] = useState(posts[id-1].body)\r\n\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  \r\n  \r\n// to update the value in state\r\n  const handleChange = ({target : {name,value}}) => {\r\n    if(name===\"id\"){\r\n      setidVal(value)\r\n    }\r\n    else if(name===\"title\"){\r\n      setidTitle(value)\r\n    }\r\n    else {\r\n      setidBody(value)\r\n    }\r\n  }\r\n// to add the updated values to api\r\n  const handleSubmit = async(e)=>{\r\n    e.preventDefault()\r\n    \r\n    let {data} = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`,{\r\n      userId : idVal,\r\n      title : idTitle,\r\n      body : idBody,\r\n  })\r\n  console.log(data)\r\nlet postupdated = [...posts]\r\n postupdated.map(post => {\r\n   if(post.id===id){\r\n     post.userId = idVal;\r\n     post.title = idTitle;\r\n     post.body = idBody;\r\n   }\r\n })\r\n setPosts(postupdated);\r\n setOpen(false)\r\n\r\n  }\r\n\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <Alert>\r\n        <Modal\r\n          show={open}\r\n          onHide={handleClose}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Update Data of id : {id}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit = {handleSubmit}>\r\n              <Form.Group className=\"mb-3\" >\r\n                <Form.Label>User ID</Form.Label>\r\n                <Form.Control type=\"text\" name = \"id\" placeholder=\"Enter user id\" value = {idVal} onChange = {handleChange} />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\" name = \"title\" placeholder=\"Enter title required\" value = {idTitle} onChange = {handleChange} />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Body</Form.Label>\r\n                <Form.Control type=\"text\" name = \"body\" placeholder=\"Enter body\" value = {idBody} onChange = {handleChange} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Alert>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePosts;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { ShowModal } from \"./CrudAppFunc\";\r\nimport axios from \"axios\";\r\n\r\nconst AddUser = () => {\r\n  let [AddVal, setAddVal] = useState(\"\");\r\n  let [AddTitle, setAddTitle] = useState(\"\");\r\n  let [AddBody, setAddBody] = useState(\"\");\r\n  let [userName, setUsername] = useState([]);\r\n  let { postAdd } = useContext(ShowModal);\r\n  let [posts, setPosts] = postAdd;\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    if (name === \"id\") {\r\n      setAddVal(value);\r\n    } else if (name === \"title\") {\r\n      setAddTitle(value);\r\n    } else {\r\n      setAddBody(value);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    getData();\r\n  }, []);\r\n\r\n  let getData = async () => {\r\n    try {\r\n      let { data } = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      setUsername(data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { data } = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/posts/\",\r\n      {\r\n        userId: AddVal,\r\n        title: AddTitle,\r\n        body: AddBody,\r\n      }\r\n    );\r\n    let postsAdd = [...posts];\r\n    console.log(data);\r\n    postsAdd.push(data);\r\n    setPosts(postsAdd);\r\n    setAddBody(\"\");\r\n    setAddTitle(\"\");\r\n    setAddVal(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>User ID</Form.Label>\r\n          <Form.Control name=\"id\" as=\"select\" custom onChange={handleChange}>\r\n            {userName.map((user) => {\r\n              return (\r\n                <>\r\n                  <option value={user.id}>{user.name}</option>\r\n                </>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Enter title required\"\r\n            value={AddTitle}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Body</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"body\"\r\n            placeholder=\"Enter body\"\r\n            value={AddBody}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Add User\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Button, Container,Col,Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport ModalAlert from \"./modalDeleteAlert\";\r\nimport UpdatePosts from \"./updateUsers\";\r\nimport AddUser from \"./InputUser\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const ShowModal = React.createContext();\r\n\r\nfunction Crud() {\r\n  let API = \"https://jsonplaceholder.typicode.com/posts\";\r\n  let [posts, setPosts] = useState([]);\r\n  let [userId, setUserId] = useState(\"\");\r\n  let [title, setTitle] = useState(\"\");\r\n  let [id, setID] = useState();\r\n  let [show, setShow] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // get data from api function\r\n\r\n  useEffect(async () => {\r\n    getData();\r\n  }, []);\r\n\r\n  let getData = async () => {\r\n    try {\r\n      let { data } = await axios.get(API);\r\n      setPosts(data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // to delete user\r\n  const modalShow = (id) => {\r\n    setID(id);\r\n    console.log(id);\r\n    setShow(true);\r\n  };\r\n\r\n  // to update the data\r\n\r\n  const UpdateData = (id) => {\r\n    setID(id);\r\n    setOpen(true);\r\n    console.log(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n     \r\n      <Container maxWidth=\"sm\">\r\n      <h3>Data of Posts</h3>\r\n      <Container className=\"justify-content-center\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col sm={6}>\r\n          <ShowModal.Provider\r\n            value={{\r\n              postAdd: [posts, setPosts],\r\n            }}\r\n          >\r\n            <AddUser />\r\n          </ShowModal.Provider>\r\n        </Col>\r\n        </Row>\r\n      </Container>\r\n<br></br>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>User Id</th>\r\n              <th>Title</th>\r\n              <th>Body</th>\r\n              <th>Delete Post</th>\r\n              <th>Update Post</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map((e) => {\r\n              return (\r\n                <>\r\n                  <tr key={e.id}>\r\n                    <td>{e.id}</td>\r\n                    <td><Link to={`/aboutuser/${e.userId}`}>{e.userId}</Link></td>\r\n                    <td>{e.title}</td>\r\n                    <td>{e.body}</td>\r\n                    <td>\r\n                      <Button variant=\"danger\" onClick={() => modalShow(e.id)}>\r\n                        Delete\r\n                      </Button>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => UpdateData(e.id)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      <ShowModal.Provider\r\n        value={{\r\n          UpdateShow: [open, setOpen],\r\n          idUpdate: [id, setID],\r\n          postUp: [posts, setPosts],\r\n        }}\r\n      >\r\n        {open ? <UpdatePosts /> : \"\"}\r\n      </ShowModal.Provider>\r\n\r\n      <ShowModal.Provider\r\n        value={{\r\n          idDel: [id, setID],\r\n          showStatus: [show, setShow],\r\n          postDel: [posts, setPosts],\r\n        }}\r\n      >\r\n        {show ? <ModalAlert /> : \"\"}\r\n      </ShowModal.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Crud;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {useRouteMatch} from 'react-router-dom'\r\n\r\nconst AboutUser = () => {\r\n    const match = useRouteMatch();\r\n    const [User, setUser] = useState(match.params.Id);\r\n  const [Data, setData] = useState(\"\");\r\n  \r\n  console.log(match)\r\n  \r\n\r\n    \r\n\r\n  let getData = async () => {\r\n    try {\r\n      let { data } = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${User}`\r\n      );\r\n      setData(data);\r\n      console.log(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setUser(\"\");\r\n  };\r\n\r\n  const handleChange = ({ target: { value } }) => setUser(value);\r\n\r\n  return (\r\n    <>\r\n    <br></br>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col sm={6}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"formGroupExampleInput\">Enter the Id of User</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput\"\r\n                placeholder=\"Enter id\"\r\n                value={User}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={getData}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container >\r\n      <br></br>\r\n      <div className=\"container-md\">\r\n       {Data? <Accordion variant = \"primary\">\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n              Details\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        id : <span className=\"font-weight-normal \"> {Data.id}</span>\r\n                      </p>\r\n                    </Col>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        Name : <span className=\"font-weight-normal \"> {Data.name}</span>\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        Email : <span className=\"font-weight-normal \"> {Data.email}</span>\r\n                      </p>\r\n                    </Col>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        Address : <span className=\"font-weight-normal \">{Data.address.suite}, {Data.address.street},{Data.address.zipcode},</span>\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        Company : <span className=\"font-weight-normal \"> {Data.company.name}</span>\r\n                      </p>\r\n                    </Col>\r\n                    <Col>\r\n                      <p className=\"text-left font-weight-light \">\r\n                        Company : <span className=\"font-weight-normal \">{Data.website}</span>\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          \r\n        </Accordion> : \"\"}\r\n      </div>\r\n      <br></br>\r\n    </>\r\n  );\r\n};\r\nexport default AboutUser;\r\n","import React from 'react';\r\nimport {BrowserRouter,Route, Redirect,Switch} from 'react-router-dom'\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Crud from './CrudAppFunc';\r\nimport AboutUser from './AboutUser';\r\nimport { Row,Col,Nav,Container,Navbar} from \"react-bootstrap\";\r\n\r\n\r\nconst Routing = () => {\r\n    return (\r\n        <>\r\n<div className=\"header\">\r\n{/* <img className = \"image\"\r\n      src=\"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\"\r\n      alt=\"new\"\r\n      /> */}\r\n      {/* <Container>\r\n  <Row>\r\n    <Col>1 of 1</Col>\r\n    <Col>1 of 1</Col>\r\n    <Col>1 of 1</Col>\r\n  </Row>\r\n</Container> */}\r\n\r\n<Navbar bg=\"primary\" variant=\"dark\" >\r\n<Container>\r\n<Navbar.Brand href=\"/home\">\r\n        <img\r\n          alt=\"\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png\"\r\n          width=\"45\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n      Crud App\r\n      </Navbar.Brand>\r\n      <Nav className=\"me-auto\">\r\n      <Nav.Link href=\"/home\">Home</Nav.Link>\r\n      <Nav.Link href=\"/posts\">Posts</Nav.Link>\r\n      <Nav.Link href=\"/aboutuser\">About User</Nav.Link>\r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"/aboutme\">About Me</Nav.Link>\r\n      \r\n    </Nav>\r\n    </Container>\r\n          {/* <Nav variant=\"tabs\" className=\"topnav\">\r\n  \r\n </Nav> */}\r\n </Navbar>\r\n\r\n      \r\n \r\n  </div>\r\n\r\n        <BrowserRouter>\r\n        <Switch>\r\n        <Route exact path=\"/\">\r\n            <Home />\r\n        </Route>\r\n        <Route path=\"/About\">\r\n            <About />\r\n        </Route>\r\n       \r\n        <Route path=\"/home\">\r\n            <Redirect to = \"/\"></Redirect>\r\n        </Route>\r\n        <Route path=\"/posts\">\r\n            <Crud/>\r\n        </Route>\r\n        <Route path=\"/aboutuser/:Id\">\r\n            <AboutUser/>\r\n        </Route>\r\n        <Route path=\"/aboutuser\">\r\n            <AboutUser/>\r\n        </Route>\r\n        <Route path=\"/aboutme\">\r\n            <About/>\r\n        </Route>\r\n        <Route path=\"*\">\r\n            <h1>404 Error</h1>\r\n        </Route>\r\n        </Switch>\r\n        </BrowserRouter>\r\n\r\n        <div className=\"footer\"></div>\r\n        </>\r\n    )\r\n}\r\nexport default Routing","import React, {Component} from 'react'\r\n\r\n// import Counter from './counter'\r\n\r\n// import JobApp from './JobApp'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import Crud from './CrudAppFunc'\r\nimport Routing from './Routing';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            show : false,\r\n        }\r\n    }\r\n    // showCom = () =>{\r\n    //     this.setState({show : !this.state.show})\r\n    // }\r\n    \r\n    render(){\r\n    return <>\r\n    {/* <button onClick = {this.showCom}>Show/hide</button>\r\n    {this.state.show ? <Counter />:<></>} */}\r\n    {/* <JobApp/> */}\r\n    {/* <Crud /> */}\r\n    <Routing/>\r\n    </>\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Counter from './componentClass';\n// import CounterFunctional from './componentFunctional';\nimport App from './app'\n// import DataR from './PostApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css'\n\n// const test = ()=> {\n//   return <h1>Hello Counter inner function</h1>;\n// }\n\nReactDOM.render( <>\n{/* <Counter/>\n{test()}\n<CounterFunctional />  */}\n{/* <App /> */}\n{/* <DataR/> */}\n<App />\n</>,\n document.getElementById('root'));\n "],"sourceRoot":""}